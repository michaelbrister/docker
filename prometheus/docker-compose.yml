version: '3.1'

volumes:
    prometheus_data: {}
    grafana_data: {}

services:

  prometheus:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.localhost`)"
      - "traefik.http.routers.prometheus.entrypoints=web"
    image: prom/prometheus
    container_name: prometheus
    #    network_mode: host
    volumes:
      - ./config/prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    depends_on:
      - cadvisor
    restart: always

  node-exporter:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.node-exporter.rule=Host(`nodeexporter.localhost`)"
      - "traefik.http.routers.node-exporter.entrypoints=web"
    image: prom/node-exporter
    container_name: node-exporter
    #network_mode: host
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    restart: always

  alertmanager:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.node-exporter.rule=Host(`alertmanager.localhost`)"
      - "traefik.http.routers.node-exporter.entrypoints=web"
    image: prom/alertmanager
    container_name: alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./config/alertmanager/:/etc/alertmanager/
    restart: always
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'

  cadvisor:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cadvisor.rule=Host(`cadvisor.localhost`)"
      - "traefik.http.routers.cadvisor.entrypoints=web"
    image: google/cadvisor
    container_name: cadvisor
    #network_mode: host
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    restart: always

  grafana:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.localhost`)"
      - "traefik.http.routers.grafana.entrypoints=web"
    image: grafana/grafana
    container_name: grafana
    #network_mode: host
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
        #      - ./data/grafana_data:/var/lib/grafana
      - ./config/grafana/dashboards:/var/lib/grafana/dashboards
      - ./config/grafana/provisioning:/etc/grafana/provisioning
    env_file:
      - config/grafana/config.monitoring

  blackbox_exporter:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.blackbox_exporter.rule=Host(`blackbox.localhost`)"
      - "traefik.http.routers.blackbox_exporter.entrypoints=web"
    image: prom/blackbox-exporter
    container_name: blackbox_exporter
    #network_mode: host
    ports:
      - 9115:9115
    volumes:
      - ./config/blackboxexporter/:/etc/blackboxexporter/
    command:
      - '--config.file=/etc/blackboxexporter/config.yml'
    restart: always

  traefik:
    image: "traefik:v2.2"
    container_name: "traefik"
    #network_mode: host
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
